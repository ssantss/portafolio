---
import type { Project } from "@/data/projects";

type Props = Project;

const { title, techs, link, isComingSoon, description, git, youtube } =
  Astro.props;

const formatTechs = (values: string[]) =>
  values.toString().replaceAll(",", " • ");
---

<>
  {
    isComingSoon && (
      <div class="t group flex w-full flex-col justify-between gap-2 rounded-md border border-neutral-700 p-4 md:flex-row md:items-center">
        <div class="flex flex-col gap-2 md:flex-row md:items-center md:gap-4">
          <p class="text-neutral-100">{title}</p>
          <p>{formatTechs(techs)}</p>
        </div>

        <p class="w-fit rounded-md bg-neutral-900 px-4 py-1">Soon</p>
      </div>
    )
  }

  {
    !isComingSoon && (
      <>
        <div class="project-container  group flex w-full cursor-pointer flex-col justify-between gap-2 rounded-md border border-neutral-700 p-4 transition-all duration-300 hover:-translate-y-2 hover:border-neutral-400 md:flex-row md:items-center">
          <div>
            <div class="flex w-full flex-col gap-4 md:flex-row md:items-center">
              <div class="flex">
                <p class="text-neutral-100">{title}</p>
                <span
                  class="iconify ml-auto md:hidden"
                  data-icon="line-md:external-link"
                  data-inline="false"
                  style="font-size: 1rem; color: white;"
                />
              </div>
              <p>{formatTechs(techs)}</p>
            </div>
            <p class="mt-2">{description}</p>
            <div class="flex">
              {git && (
                <a
                  class="ml-2 mt-2 w-fit flex items-center gap-2 rounded-md bg-[#24292e] hover:bg-[#1b1f23] px-4 py-1 text-white transition-colors duration-200"
                  href={git}
                  target="_blank"
                  rel="noreferrer"
                >
                  <svg height="20" width="20" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/>
                  </svg>
                  GitHub
                </a>
              )}
              {youtube && (
                <a
                  class="ml-2 mt-2 w-fit flex items-center gap-2 rounded-md bg-[#FF0000] hover:bg-[#CC0000] px-4 py-1 text-white transition-colors duration-200"
                  href={youtube}
                  target="_blank"
                  rel="noreferrer"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
                  </svg>
                  Ver Demo
                </a>
              )}
              {link && (
                <a
                  class="ml-2 mt-2 w-fit flex items-center gap-2 rounded-md bg-[#4F46E5] hover:bg-[#4338CA] px-4 py-1 text-white transition-colors duration-200"
                  href={link}
                  target="_blank"
                  rel="noreferrer"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
                    <polyline points="15 3 21 3 21 9"/>
                    <line x1="10" y1="14" x2="21" y2="3"/>
                  </svg>
                  Visitar
                </a>
              )}
            </div>
          </div>

          <svg
            width="18"
            height="18"
            viewBox="0 0 18 18"
            fill="none"
            class="hidden transition-all duration-300 group-hover:translate-x-1 md:block"
          >
            <path
              d="M5.25 12.75L12.75 5.25"
              stroke="#999999"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
            <path
              d="M5.25 5.25H12.75V12.75"
              stroke="#999999"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </div>
      </>
    )
  }

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const projectContainers = document.querySelectorAll(".project-container");

      projectContainers.forEach((container) => {
        container.addEventListener("click", function (event) {
          // Comprobar si el clic fue en uno de los otros enlaces
          if (
            event.target.closest("a") &&
            !event.target.classList.contains("visitar-btn")
          ) {
            return; // Si se hizo clic en otro enlace, no hacer nada
          }

          // Encuentra el enlace "Visitar" dentro de este contenedor específico
          const visitarLink = container.querySelector(".visitar-btn");
          if (visitarLink) {
            visitarLink.click(); // Simula un clic en el enlace "Visitar"
          }
        });
      });
    });
  </script>
</>

<style></style>
